# This configuration is a simplified example of how to use ssl on front
# and backends with additional certificates loaded from a directory for SNI
# capable clients.

global
	maxconn 100
	# https://www.haproxy.com/documentation/aloha/6-5/haproxy/tls/	
	
	log /dev/log local0
	
	#ssl-default-bind-options no-sslv3	
	#ssl-default-bind-ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK

	ssl-server-verify none
	
	# https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#3.2-tune.ssl.cachesize
	tune.ssl.cachesize 100000
	tune.ssl.lifetime 600
	
	tune.ssl.default-dh-param 2048
	tune.ssl.maxrecord 1460
 
defaults
	mode http
	timeout connect 60s
	timeout client 60s
	timeout server 60s
    #log global
	
		
frontend myfrontend-http
	bind :80 accept-proxy
	tcp-request content set-var(proc.xforwardedby) dst
	tcp-request content set-var(proc.xclientip) src
	tcp-request connection set-src src,ipmask(24)
	reqadd X-Forwarded-Proto:\ http
	default_backend mybackend
	
listen ssl-proxy
	bind :443 accept-proxy
	
    mode tcp
	tcp-request content set-var(proc.xforwardedby) dst
	tcp-request content set-var(proc.xclientip) src
	tcp-request connection set-src src,ipmask(24)
    server http localhost:8443

frontend myfrontend-https
	
	# https://www.haproxy.com/blog/howto-ssl-native-in-haproxy/
	bind :8443 ssl crt /etc/cert/haproxy.pem npn http/1.1,http/1.0
	
	# https://www.haproxy.com/blog/ssl-client-certificate-information-in-http-headers-and-logs/
	http-request set-header X-SSL-Cipher %[ssl_fc_cipher]
	http-request set-header X-SSL-Protocol %[ssl_fc_protocol]
	http-request set-header X-SSL-Session_ID %[ssl_fc_session_id,hex]
	http-request set-header X-Forwarded-Proto \ https	
	
	default_backend mybackend

backend mybackend

	# https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#src
    http-request set-header X-Forwarded-By %[var(proc.xforwardedby)]
    http-request set-header X-Forwarded-For "${DOCKERIP}:%[dst_port]"
    http-request set-header X-Client-IP %[var(proc.xclientip)]
		
	server app app:8080
	http-response set-header Content-Type application/json